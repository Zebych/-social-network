{"version":3,"sources":["Redax/dialogsPage-reducer.ts","Redax/users-reducer.ts","utils/object_helpers/object-helpers.js","component/Login/Login.module.css","api/api.js","component/Navbar/Navbar.module.css","reportWebVitals.ts","component/Navbar/Navbar.tsx","component/Header/Header.tsx","Redax/auth-reducer.ts","component/Header/HeaderContainer.tsx","component/Login/Login.tsx","Redax/app-reducer.ts","Redax/redux-store.tsx","HOC/withSuspense.tsx","App.tsx","index.tsx","component/commen/FormControls/FormControls.tsx","utils/validators/validators.ts","component/Header/Header.module.css","component/commen/FormControls/FormControls.module.css","Redax/profile-reducer.ts","assets/images/Preloader.gif","component/commen/Preloader/Preloader.tsx"],"names":["ADD_MESSAGE","initialState","DialogData","id","name","MessageData","message","newMessage","AddMessageAC","newMessageBody","type","dialogsPageReducer","state","action","body","ActionsUsersType","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","FOLLOW","unfollowSuccess","UNFOLLOW","setCurrentPage","page","SET_CURRENT_PAGE","toggleIsFetching","TOGGLE_IS_FETCHING","toggleFollowingProgress","TOGGLE_IS_FOLLOWING_PROGRESS","requestUsers","dispatch","a","usersAPI","getUsers","response","SET_USERS","totalCount","SET_TOTAL_COUNT_PAGE","usersReducer","followed","filter","module","exports","instance","axios","create","withCredentials","baseURL","headers","get","then","data","follow","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","filePhoto","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","c","nav","item","to","activeClassName","active","Header","props","header","src","loginBlock","isAuth","onClick","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","resultCode","Logout","authReducer","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","s","err","LoginTC","stopSubmit","_error","messages","length","INITIALIZED_SUCCESS","initialized","appReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","WithSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","initialize","path","render","Login","AppContainer","compose","promise","Promise","all","catch","console","log","TestApp","basename","ReactDOM","document","getElementById","Textarea","input","restProps","meta","FormControl","Input","touched","hasError","formControl","children","validate","placeholder","text","component","value","maxLengthCreator","maxLendth","ActionProfileType","PostsData","likesCount","profile","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","fullName","lookingForAJob","lookingForAJobDescription","photos","large","small","addPostAC","postMessage","ADD_POST","setStatus","SET_STATUS","getUsersProfile","SET_USERS_PROFILE","SAVE_PHOTO_SUCCESS","newPost","preloader"],"mappings":"6JAEMA,EAAc,sBAEhBC,EAAe,CACfC,WAAY,CACR,CAACC,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,QAEd,CAACD,GAAI,EAAGC,KAAM,UAElBC,YAAa,CACT,CAACF,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,YAErBC,WAAY,IAqBHC,EAAe,SAACC,GACzB,MAAO,CACHC,KAAMV,EACNS,mBAQOE,IA7BY,WAA8E,IAA7EC,EAA4E,uDAAlDX,EAAcY,EAAoC,uCAEpG,OAAQA,EAAOH,MACX,KAAKV,EACD,IAAIc,EAAOD,EAAOJ,eAClB,OAAO,2BACAG,GADP,IAEIL,WAAY,GACZF,YAAY,GAAD,mBAAMO,EAAMP,aAAZ,CAAyB,CAChCF,GAAI,EACJG,QAASQ,OAGrB,QACI,OAAOF,K,+MC7BdG,E,+CCJQC,EAAsB,SAACC,EAAOC,EAASC,EAAaC,GAC7D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,2BACAI,GACAF,GAGAE,O,SDJdP,K,sBAAAA,E,0BAAAA,E,4BAAAA,E,0CAAAA,E,kDAAAA,E,8CAAAA,E,mEAAAA,M,KAUL,IAAId,EAAe,CACfsB,MAAO,GACPC,SAAU,GACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAgDZC,EAAgB,SAACC,GAC1B,MAAO,CAACpB,KAAMK,EAAiBgB,OAAQD,WAE9BE,EAAkB,SAACF,GAC5B,MAAO,CAACpB,KAAMK,EAAiBkB,SAAUH,WAKhCI,EAAiB,SAACC,GAC3B,MAAO,CAACzB,KAAMK,EAAiBqB,iBAAkBV,YAAaS,IAKrDE,EAAmB,SAACV,GAC7B,MAAO,CAACjB,KAAMK,EAAiBuB,mBAAoBX,eAE1CY,EAA0B,SAACZ,EAAqBG,GACzD,MAAO,CAACpB,KAAMK,EAAiByB,6BAA8Bb,aAAYG,WAIhEW,EAAe,SAACN,EAAcX,GAAf,8CAAoC,WAAOkB,GAAP,eAAAC,EAAA,6DAC5DD,EAASL,GAAiB,IAC1BK,EAASR,EAAeC,IAFoC,SAGvCS,IAASC,SAASV,EAAMX,GAHe,OAGxDsB,EAHwD,OAK5DJ,EAASL,GAAiB,IAC1BK,GAvBqBnB,EAuBHuB,EAAS7B,MAtBpB,CAACP,KAAMK,EAAiBgC,UAAWxB,WAuB1CmB,GAlB+BM,EAkBHF,EAASE,WAjB9B,CAACtC,KAAMK,EAAiBkC,qBAAsBD,gBAUO,iCAX9B,IAACA,EANVzB,IAiBuC,OAApC,uDAuDb2B,IA1HM,WAAoF,IAAnFtC,EAAkF,uDAAxDX,EAAcY,EAA0C,uCAEpG,OAAQA,EAAOH,MACX,KAAKK,EAAiBgB,OAClB,OAAO,2BACAnB,GADP,IAEIW,MAAOP,EAAoBJ,EAAMW,MAAMV,EAAOiB,OAAO,KAAM,CAACqB,UAAU,MAE9E,KAAKpC,EAAiBkB,SAClB,OAAO,2BACArB,GADP,IAEIW,MAAMP,EAAoBJ,EAAMW,MAAMV,EAAOiB,OAAO,KAAM,CAACqB,UAAU,MAE7E,KAAKpC,EAAiBgC,UAClB,OAAO,2BACAnC,GADP,IAEIW,MAAOV,EAAOU,QAEtB,KAAKR,EAAiBqB,iBAClB,OAAO,2BACAxB,GADP,IACcc,YAAab,EAAOa,cAEtC,KAAKX,EAAiBkC,qBAClB,OAAO,2BACArC,GADP,IACca,gBAAiBZ,EAAOmC,aAE1C,KAAKjC,EAAiBuB,mBAClB,OAAO,2BACA1B,GADP,IACce,WAAYd,EAAOc,aAErC,KAAKZ,EAAiByB,6BAClB,OAAO,2BACA5B,GADP,IAEIgB,oBAAqBf,EAAOc,WAAP,sBACXf,EAAMgB,qBADK,CACgBf,EAAOiB,SACtClB,EAAMgB,oBAAoBwB,QAAO,SAAAjD,GAAE,OAAIA,GAAMU,EAAOiB,YAElE,QACI,OAAOlB,K,oBE7DnByC,EAAOC,QAAU,CAAC,IAAM,qB,gCCDxB,mHAEMC,EAFN,OAEiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAC,UAAW,0CAGZhB,EAAW,CACpBC,SADoB,WACsB,IAAjCnB,EAAgC,uDAAlB,EAAGF,EAAe,uDAAJ,GACjC,OAAO+B,EAASM,IAAT,qBAA2BnC,EAA3B,kBAAgDF,IAAYsC,MAAK,SAAAhB,GAAQ,OAAIA,EAASiB,SAEjGC,OAJoB,SAIblC,GACH,OAAOyB,EAASU,KAAT,iBAAwBnC,KAGnCoC,SARoB,SAQXpC,GACL,OAAOyB,EAASY,OAAT,iBAA0BrC,MAK5BsC,EAAa,CACtBC,WADsB,SACXvC,GACP,OAAOyB,EAASM,IAAT,mBAAyB/B,KAEpCwC,UAJsB,SAIZxC,GACN,OAAOyB,EAASM,IAAT,0BAAgC/B,KAE3CyC,aAPsB,SAOTC,GACT,OAAOjB,EAASkB,IAAT,mBAAiC,CAACD,YAG7CE,UAXsB,SAWZC,GAEN,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAAQH,GACjBpB,EAASkB,IAAT,kBAAgCG,EAAU,CAC7ChB,QAAQ,CACJ,eAAe,2BAMlBmB,EAAU,CACnBC,GADmB,WAEf,OAAOzB,EAASM,IAAT,YAEXoB,MAJmB,SAIbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAO7B,EAASU,KAAT,aAA4B,CAACiB,QAAOC,WAAUC,gBAEzDC,OAPmB,WAQf,OAAO9B,EAASY,OAAT,iB,mBCpDfd,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,wGCalEgC,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,kGCmBCO,EAxBA,WACX,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACI,qBAAKF,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,WAAYC,gBAAiBJ,IAAEK,OAA5C,wBAEJ,qBAAKN,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEK,QAA/B,SACI,cAAC,IAAD,CAASF,GAAI,WAAYC,gBAAiBJ,IAAEK,OAA5C,wBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,SAAUC,gBAAiBJ,IAAEK,OAA1C,qBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,OAAQC,gBAAiBJ,IAAEK,OAAxC,oBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,SAAUC,gBAAiBJ,IAAEK,OAA1C,qBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,YAAaC,gBAAiBJ,IAAEK,OAA7C,4B,wBCCDC,EAf0B,SAACC,GACtC,OACI,sBAAKR,UAAWC,IAAEQ,OAAlB,UACI,qBACIC,IAAK,2HACT,qBAAKV,UAAWC,IAAEU,WAAlB,SACKH,EAAMI,OACD,gCAAMJ,EAAMtB,MAAZ,KAAoB,wBAAQ2B,QAASL,EAAMlB,OAAvB,wBACpB,cAAC,IAAD,CAASc,GAAI,SAAb,yB,gDCbhBU,EAAgB,qBAElB5G,EAAqC,CACrCE,GAAI,KACJ+E,MAAO,KACPD,MAAO,KACP0B,QAAQ,GAkBCG,EACT,SAAC3G,EAAmB+E,EAAsBD,EAAsB0B,GAAhE,MACK,CAACjG,KAAMmG,EAAeE,QAAS,CAAC5G,KAAI+E,QAAOD,QAAO0B,YAG9CK,EAAkB,yDAAM,WAAOtE,GAAP,uBAAAC,EAAA,sEACZoC,IAAQC,KADI,OAGA,KAF7BlC,EAD6B,QAGpBiB,KAAKkD,aAAmB,EACRnE,EAASiB,KAAKA,KAAlC5D,EAD2B,EAC3BA,GAAI+E,EADuB,EACvBA,MAAOD,EADgB,EAChBA,MAChBvC,EAASoE,EAAgB3G,EAAI+E,EAAOD,GAAO,KALd,2CAAN,uDAmBlBiC,EAAS,yDAAM,WAAOxE,GAAP,SAAAC,EAAA,sEACHoC,IAAQM,SADL,OAGS,IAHT,OAGXtB,KAAKkD,YACdvE,EAASoE,EAAgB,KAAM,KAAM,MAAM,IAJvB,2CAAN,uDAmBPK,EA1DK,WACW,IADVvG,EACS,uDADqBX,EAAcY,EACnC,uCAC1B,OAAQA,EAAOH,MACX,KAAKmG,EACD,OAAO,2BACAjG,GACAC,EAAOkG,SAElB,QACI,OAAOnG,ICFbwG,E,4JACF,WACI,OACI,cAAC,EAAD,2BAAYC,KAAKd,OAAjB,IAAwBlB,OAAQ6B,S,GAHdI,IAAMC,WAcrBC,eALS,SAAC5G,GAAD,MAA+C,CACnEqE,MAAOrE,EAAM6G,KAAKxC,MAClB0B,OAAO/F,EAAM6G,KAAKd,UAGkB,CAACG,kBAAiBI,UAA3CM,CAAoDJ,G,2CCH7DM,EAAiBC,YAAwB,CAACC,KAAM,SAA/BD,EAhBsC,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MACzE,OACI,uBAAMC,SAAUF,EAAhB,UACKG,YAAY,QAAS,CAACC,KAAY,SAClCD,YAAY,WAAY,CAACC,KAAW,WAAY,CAACvH,KAAM,SACvDsH,YAAY,aAAc,GAAK,aAAc,CAACtH,KAAM,YACjD,eAEHoH,GAAS,qBAAK/B,UAAWmC,IAAEC,IAAlB,SAAwBL,IAClC,8BACI,mDA6BDN,eANS,SAAC5G,GACrB,MAAO,CACH6G,KAAM7G,EAAM6G,QAIoB,CAACW,QFblB,SAAClD,EAAeC,EAAkBC,GAAlC,8CAA0D,WAAO1C,GAAP,iBAAAC,EAAA,6DAC7ED,EAAS2F,YAAW,QAAS,CAACC,OAAQ,kBADuC,SAExDvD,IAAQE,MAAMC,EAAOC,EAAUC,GAFyB,OAI5C,KAF7BtC,EAFyE,QAIhEiB,KAAKkD,WACdvE,EAASsE,MAEL1G,EAAUwC,EAASiB,KAAKwE,SAASC,OAAS,EAAI1F,EAASiB,KAAKwE,SAAS,GAAK,aAC9E7F,EAAS2F,YAAW,QAAS,CAACC,OAAQhI,MARmC,2CAA1D,wDEaRkH,EArBD,SAACjB,GAIX,OAAIA,EAAMI,OACC,cAAC,IAAD,CAAUR,GAAI,aAEjB,gCACA,uCACA,cAACuB,EAAD,CAAgBK,SARP,SAACnD,GACd2B,EAAM6B,QAAQxD,EAASM,MAAON,EAASO,SAAUP,EAASQ,qB,QChC5DqD,EAAsB,0BAExBxI,EAAe,CACfyI,aAAa,GAmCFC,EAhCI,WACQ,IADP/H,EACM,uDADmBX,EAAcY,EACjC,uCACtB,OAAQA,EAAOH,MACX,KAAK+H,EACD,OAAO,2BACA7H,GADP,IAEI8H,aAAa,IAErB,QACI,OAAO9H,I,4CCNNgI,EAAcC,YAAgB,CACvCC,YAAaC,IACbC,YAAarI,IACbsI,UAAW/F,IACXuE,KAAMN,EACNS,KAAKsB,IACLC,IAAIR,IAIKS,EAAQC,YAAYT,EAAaU,YAAgBC,MAS9DC,OAAOJ,MAAQA,EACAA,S,SC5BFK,GAAa,SAAClC,GAEvB,OAAO,SAAChB,GACJ,OAAO,cAAC,IAAMmD,SAAP,CAAgBC,SAAU,cAACC,GAAA,EAAD,IAA1B,SACH,cAACrC,EAAD,eAAehB,QCKrBsD,GAAmBvC,IAAMwC,MAAK,kBAAM,iCACpCC,GAAmBzC,IAAMwC,MAAK,kBAAM,iCACpCE,GAAiB1C,IAAMwC,MAAK,kBAAM,iCAUlCG,G,uKACF,WACI5C,KAAKd,MAAM2D,kB,oBAGf,WACI,OAAK7C,KAAKd,MAAM4D,WAIZ,sBAAKpE,UAAW,cAAhB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,sBAAKA,UAAW,sBAAhB,UACI,cAAC,IAAD,CAAOqE,KAAM,WAAYC,OAAQZ,GAAaI,MAC9C,cAAC,IAAD,CAAOO,KAAM,oBAAqBC,OAAQZ,GAAaM,MACvD,cAAC,IAAD,CAAOK,KAAM,SAAUC,OAAQZ,GAAaa,KAE5C,cAAC,IAAD,CAAOF,KAAM,SAAUC,OAAQ,WAC3B,OAAO,cAAC,IAAMX,SAAP,CAAgBC,SAAU,6CAA1B,SACH,cAACK,GAAD,eAdT,cAAC,EAAD,Q,GAPD1C,IAAMC,WAkCpBgD,GAAeC,YAEfhD,aANoB,SAAC5G,GAAD,MAA6C,CACjEuJ,WAAYvJ,EAAMuI,IAAIT,eAKG,CAACwB,cHlCD,kBAAM,SAACxH,GAChC,IAAI+H,EAAU/H,EAASsE,KACvB0D,QAAQC,IAAI,CAACF,IAAU3G,MAAK,WACxBpB,EANiC,CAAChC,KAAM+H,OAOzCmC,OACC,WACIC,QAAQC,IAAI,2BG4BpBtD,CAA0CyC,KAS/Bc,GAPC,WACZ,OAAO,cAAC,IAAD,CAAYC,SAAU,gBAAtB,SACH,cAAC,IAAD,CAAU5B,MAAOA,GAAjB,SACI,cAACmB,GAAD,SCxDRU,IAASZ,OACP,cAAC,GAAD,IAAYa,SAASC,eAAe,SAO1C7F,K,8JCda8F,EAA0B,SAAC7E,GAAW,IACxC8E,EAA6B9E,EAA7B8E,MAAgBC,GAAa/E,EAAtBgF,KADgC,YACVhF,EADU,mBAE9C,OAAO,cAACiF,EAAD,2BAAiBjF,GAAjB,aAAwB,oDAAa8E,GAAUC,QAG7CG,EAAuB,SAAClF,GAAW,IACrC8E,EAA6B9E,EAA7B8E,MAAgBC,GAAa/E,EAAtBgF,KAD6B,YACPhF,EADO,mBAE3C,OAAO,cAACiF,EAAD,2BAAiBjF,GAAjB,aAAwB,iDAAU8E,GAAUC,QAIjDE,EAA6B,SAAC,GAA8C,EAA7CH,MAA8C,IAAD,IAAtCE,KAAOG,EAA+B,EAA/BA,QAAS5D,EAAsB,EAAtBA,MAAWvB,EAAW,gCACxEoF,EAAWD,GAAW5D,EAC5B,OACI,sBAAK/B,UAAWmC,IAAE0D,YAAc,KAAOD,EAAWzD,IAAEJ,MAAQ,IAA5D,UACI,8BACKvB,EAAMsF,WAEX,8BACKF,GAAY,+BAAO7D,UAOvBE,EAAc,SAAC5H,EACA0L,EACAC,EAAqBxF,EAAayF,GAC1D,OAAO,gCACH,cAAC,IAAD,aAAOD,YAAaA,EAAa3L,KAAMA,EAAM0L,SAAUA,EAAUG,UAAWR,GAAWlF,IACpFyF,O,gCCnCX,oEAAO,IAAM/D,EAAW,SAACiE,GACrB,IAAIA,EACJ,MAAO,qBAEEC,EAAmB,SAACC,GAAD,OAAuB,SAACF,GACpD,GAAIA,EAAM1D,OAAS4D,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCJlC/I,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,mBCA/DD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,8MCGrE+I,E,yDAAAA,K,4BAAAA,E,8CAAAA,E,gCAAAA,E,yCAAAA,M,KAQL,IAAIpM,EAAe,CACfqM,UAAW,CACP,CAACnM,GAAI,EAAGG,QAAS,gBAAiBiM,WAAY,GAC9C,CAACpM,GAAI,EAAGG,QAAS,KAAMiM,WAAY,GACnC,CAACpM,GAAI,EAAGG,QAAS,SAAUiM,WAAY,IAE3CC,QAAS,CACLC,QAAS,GACTC,SACI,CACIC,SAAU,GACVC,OAAQ,GACRC,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,GAAI,GACJC,QAAS,GACTC,QAAS,IAEjBC,SAAU,MACVC,gBAAgB,EAChBC,0BAA2B,GAC3BC,OACI,CACIC,MAAO,GACPC,MAAO,IAEf1L,OAAQ,OAEZ0C,OAAQ,IAqCCiJ,EAAY,SAACC,GACtB,MAAO,CACHhN,KAAM2L,EAAkBsB,SACxBD,YAAaA,IAGRE,EAAY,SAACpJ,GACtB,MAAO,CACH9D,KAAM2L,EAAkBwB,WACxBrJ,WAiBKsJ,EAAkB,SAAChM,GAAD,8CAAoB,WAAOY,GAAP,eAAAC,EAAA,sEAC1ByB,IAAWC,WAAWvC,GADI,OAC3CgB,EAD2C,OAE/CJ,GAhB4B8J,EAgBH1J,EAASiB,KAf3B,CACHrD,KAAM2L,EAAkB0B,kBACxBvB,QAASA,KAWkC,iCAdpB,IAACA,IAcmB,OAApB,uDAKlBlI,EAAY,SAACxC,GAAD,8CAAoB,WAAOY,GAAP,eAAAC,EAAA,sEACpByB,IAAWE,UAAUxC,GADD,OACrCgB,EADqC,OAEzCJ,EAASkL,EAAU9K,EAASiB,OAFa,2CAApB,uDAKZQ,EAAe,SAACC,GAAD,8CAAoB,WAAO9B,GAAP,SAAAC,EAAA,sEACvByB,IAAWG,aAAaC,GADD,OAEX,IAFW,OAE/BT,KAAKkD,YACdvE,EAASkL,EAAUpJ,IAHqB,2CAApB,uDAMfE,EAAY,SAACC,GAAD,8CAAoB,WAAOjC,GAAP,eAAAC,EAAA,sEAChByB,IAAWM,UAAUC,GADL,OAEJ,KAD7B7B,EADiC,QAExBiB,KAAKkD,YACdvE,GA3BqB4K,EA2BKxK,EAASiB,KAAKA,KAAKuJ,OA1B9C,CACH5M,KAAM2L,EAAkB2B,mBACxBV,YAqBqC,iCAxBb,IAACA,IAwBY,OAApB,uDAWVvE,IAvFQ,WAA8E,IAA7EnI,EAA4E,uDAAlDX,EAAcY,EAAoC,uCAEhG,OAAQA,EAAOH,MACX,KAAK2L,EAAkBsB,SACnB,IAAMM,EAA8B,CAChC9N,GAAI,EACJG,QAASO,EAAO6M,YAChBnB,WAAY,GAEhB,OAAO,2BACA3L,GADP,IAEI0L,UAAU,GAAD,mBAAM1L,EAAM0L,WAAZ,CAAuB2B,MAExC,KAAK5B,EAAkB0B,kBACnB,OAAO,2BACAnN,GADP,IAEI4L,QAAS3L,EAAO2L,UAExB,KAAKH,EAAkBwB,WACnB,OAAO,2BACAjN,GADP,IAEI4D,OAAQ3D,EAAO2D,SAEvB,KAAK6H,EAAkB2B,mBACnB,OAAO,2BACApN,GADP,IAEI4L,QAAQ,2BAAK5L,EAAM4L,SAAZ,IAAqBc,OAAQzM,EAAOyM,WAEnD,QACI,OAAO1M,K,yCCzEJ,MAA0B,sC,OCW1BgJ,IARG,WACd,OACI,8BACI,qBAAKnD,IAAKyH,S","file":"static/js/main.08a5d28f.chunk.js","sourcesContent":["import {Types} from \"./store\";\r\n\r\nconst ADD_MESSAGE = 'dialogs/ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    DialogData: [\r\n        {id: 1, name: 'Sasha'},\r\n        {id: 2, name: 'Luda'},\r\n\r\n        {id: 3, name: 'Masha'}\r\n    ],\r\n    MessageData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Yo'},\r\n        {id: 3, message: 'YO YOYo'}\r\n    ],\r\n    newMessage: \"\"\r\n}\r\n\r\nconst dialogsPageReducer = (state: InitialStateType = initialState, action: Types): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                newMessage: '',\r\n                MessageData: [...state.MessageData, {\r\n                    id: 6,\r\n                    message: body\r\n                }]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Actions\r\nexport const AddMessageAC = (newMessageBody: string) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageBody\r\n    } as const\r\n}\r\n\r\n//Types\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport default dialogsPageReducer;\r\n","import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object_helpers/object-helpers\";\r\n\r\nenum ActionsUsersType {\r\n    FOLLOW = 'users/FOLLOW',\r\n    UNFOLLOW = 'users/UNFOLLOW',\r\n    SET_USERS = 'users/SET_USERS',\r\n    SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE',\r\n    SET_TOTAL_COUNT_PAGE = 'users/SET_TOTAL_COUNT_PAGE',\r\n    TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING',\r\n    TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as number[],\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: UsersTypeAC): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ActionsUsersType.FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId,\"id\", {followed: true})\r\n            }\r\n        case ActionsUsersType.UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users,action.userId,\"id\", {followed: false})\r\n            }\r\n        case ActionsUsersType.SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case ActionsUsersType.SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case ActionsUsersType.SET_TOTAL_COUNT_PAGE:\r\n            return {\r\n                ...state, totalUsersCount: action.totalCount\r\n            }\r\n        case ActionsUsersType.TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case ActionsUsersType.TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n//Action\r\nexport const followSuccess = (userId: number) => {\r\n    return {type: ActionsUsersType.FOLLOW, userId} as const\r\n}\r\nexport const unfollowSuccess = (userId: number) => {\r\n    return {type: ActionsUsersType.UNFOLLOW, userId} as const\r\n}\r\nexport const setUsers = (users: UserType[]) => {\r\n    return {type: ActionsUsersType.SET_USERS, users} as const\r\n}\r\nexport const setCurrentPage = (page: number) => {\r\n    return {type: ActionsUsersType.SET_CURRENT_PAGE, currentPage: page} as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {type: ActionsUsersType.SET_TOTAL_COUNT_PAGE, totalCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: ActionsUsersType.TOGGLE_IS_FETCHING, isFetching} as const\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => {\r\n    return {type: ActionsUsersType.TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} as const\r\n}\r\n\r\n//Thunk\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: Dispatch<UsersTypeAC>) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    let response = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsersCount(response.totalCount))\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch<UsersTypeAC>) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\nexport const unfollow = (userId: number) => async (dispatch: Dispatch<UsersTypeAC>) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n//refactor thunk\r\nconst followUnfollowFlow = async (dispatch: Dispatch<UsersTypeAC>, userId: number, apiMethod: (userId: number) => any, actionCreator: (userId: number) => any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\n//Types\r\nexport type UsersTypeAC =\r\n    ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\n\r\ntype LocationType = {\r\n    city: string,\r\n    country: string,\r\n}\r\ntype PhotosType = {\r\n    small: string,\r\n    large: string,\r\n}\r\nexport type UserType = {\r\n    id: number,\r\n    photos: PhotosType,\r\n    name: string,\r\n    status: string,\r\n    followed: boolean,\r\n    location: LocationType,\r\n    uniqueUrlName: null,\r\n}\r\nexport default usersReducer;","export const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemsId) {\r\n            return {\r\n                ...u,\r\n                ...newObjProps\r\n            }\r\n        } else {\r\n            return u\r\n        }\r\n    })\r\n}\r\n/*state.users.map(u => {\r\n                if (u.id === action.userId) {\r\n                    return {\r\n                        ...u,\r\n                        followed: false\r\n                    }\r\n                } else {\r\n                    return u\r\n                }\r\n            })*/","// extracted by mini-css-extract-plugin\nmodule.exports = {\"err\":\"Login_err__ZmKWl\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': 'aaa63ed6-139f-4a73-aa64-3185c5225bcd'}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/ ${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status/`, {status})\r\n    },\r\n    //Отправить фото на сервак\r\n    savePhoto(filePhoto) {\r\n        debugger\r\n        const formData = new FormData()\r\n        formData.append('image',filePhoto)\r\n        return instance.put(`/profile/photo/`, formData, {\r\n            headers:{\r\n                'Content-Type':'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__8z7by\",\"item\":\"Navbar_item__nmqhl\",\"active\":\"Navbar_active__2kEwb\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport c from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink to={'/profile'} activeClassName={c.active}> Profile</NavLink>\r\n            </div>\r\n            <div className={`${c.item} ${c.active}`}>\r\n                <NavLink to={'/dialogs'} activeClassName={c.active}> message</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to={'/users'} activeClassName={c.active}>Users</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to={'/new'} activeClassName={c.active}>news</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to={'/musik'} activeClassName={c.active}>music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to={'/settings'} activeClassName={c.active}>settings</NavLink>\r\n            </div>\r\n        </nav>);\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport c from './Header.module.css';\r\n\r\ntype HeaderPropsType={\r\n    login: string | null,\r\n    isAuth:boolean,\r\n    logout:()=>void\r\n}\r\nconst Header:React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <div className={c.header}>\r\n            <img\r\n                src={'https://st.depositphotos.com/2321413/3088/v/600/depositphotos_30889807-stock-illustration-simple-social-media-icon.jpg'}/>\r\n            <div className={c.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login}- <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\n\r\nlet initialState: InitialAuthStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state: InitialAuthStateType = initialState, action: AuthTypeAC)\r\n    : InitialAuthStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n//action\r\nexport const setAuthUserData =\r\n    (id: null | number, email: null | string, login: null | string, isAuth: boolean) =>\r\n        ({type: SET_USER_DATA, payload: {id, email, login, isAuth}} as const)\r\n\r\n//thunks\r\nexport const getAuthUserData = () => async (dispatch: Dispatch<AuthTypeAC>) => {\r\n    let response = await authAPI.me()\r\n    debugger\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const LoginTC = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n    dispatch(stopSubmit('login', {_error: 'Common error'}))\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const Logout = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n//Types\r\n\r\nexport type AuthTypeAC = ReturnType<typeof setAuthUserData>\r\n\r\nexport type InitialAuthStateType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean,\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from \"react-redux\";\r\nimport {InitialAuthStateType, Logout, setAuthUserData} from \"../../Redax/auth-reducer\";\r\nimport {AppStateType} from \"../../Redax/redux-store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    // auth: InitialAuthStateType\r\n    login: string | null,\r\n    isAuth:boolean,\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setAuthUserData: (id: null | number, email: null | string, login: null | string, isAuth: boolean) => void,\r\n    // getAuthUserData: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass HeaderContainer extends React.Component <HeaderContainerPropsType> {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} logout={Logout}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    login: state.auth.login,\r\n    isAuth:state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData, Logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Login.module.css'\r\nimport {InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createField} from \"../commen/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from 'react-redux';\r\nimport {LoginTC} from \"../../Redax/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../Redax/redux-store\";\r\n\r\ntype FormDataType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"email\", [required],  \"Email\",)}\r\n            {createField(\"password\", [required], \"Password\", {type: \"text\"})}\r\n            {createField(\"rememberMe\", [],  \"rememberMe\", {type: \"checkbox\"},\r\n                \"remember me\")}\r\n\r\n            {error && <div className={s.err}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: any) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.LoginTC(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (<div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {LoginTC})(Login);","import {Dispatch} from \"redux\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state:InitialStateType = initialState, action:AuthTypeAC)\r\n    : InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n//action\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS} as const)\r\n\r\n//thunks\r\nexport const initializeApp = () => (dispatch: Dispatch<any>) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    }).catch(\r\n        ()=>{\r\n            console.log('err initializeApp')}\r\n    )\r\n}\r\n//Types\r\n\r\nexport type AuthTypeAC = ReturnType<typeof initializedSuccess>\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer, {addPostAC, savePhotoSuccess, setStatus, setUsersProfile} from \"./profile-reducer\";\r\nimport dialogsPageReducer, {AddMessageAC} from \"./dialogsPage-reducer\";\r\nimport React from \"react\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form:formReducer,\r\n    app:appReducer,\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type Types =\r\n    ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof AddMessageAC>\r\n    | ReturnType<typeof setUsersProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof savePhotoSuccess>\r\n// @ts-ignore\r\nwindow.store = store;\r\nexport default store;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Preloader from \"../component/commen/Preloader/Preloader\";\r\n\r\n\r\nexport const WithSuspense=(Component: any)=> {\r\n\r\n    return (props:any) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Navbar from \"./component/Navbar/Navbar\";\r\nimport HeaderContainer from \"./component/Header/HeaderContainer\";\r\nimport Login from \"./component/Login/Login\";\r\nimport {connect, Provider} from 'react-redux';\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redax/app-reducer\";\r\nimport store, {AppStateType} from \"./Redax/redux-store\";\r\nimport Preloader from \"./component/commen/Preloader/Preloader\";\r\nimport {WithSuspense} from \"./HOC/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./component/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import(\"./component/Profile/ProfileContainer\"))\r\nconst UsersContainer = React.lazy(() => import(\"./component/Users/UsersContainer\"))\r\n\r\ntype MapDispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\ntype MapStatePropsType = {\r\n    initialize: boolean\r\n}\r\ntype AppPropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialize) {\r\n            return <Login/>\r\n        }\r\n        return (\r\n            <div className={'app-wrapper'}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n\r\n                <div className={'app-wrapper-content'}>\r\n                    <Route path={'/dialogs'} render={WithSuspense(DialogsContainer)}/>\r\n                    <Route path={'/profile/:userId?'} render={WithSuspense(ProfileContainer)}/>\r\n                    <Route path={'/login'} render={WithSuspense(Login)}/>\r\n\r\n                    <Route path={'/users'} render={() => {\r\n                        return <React.Suspense fallback={<div>Loading...</div>}>\r\n                            <UsersContainer/>\r\n                        </React.Suspense>\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    initialize: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    /*withRouter,*/\r\n    connect(mapStateToProps, {initializeApp})(App));\r\n\r\nconst TestApp = () => {\r\n    return <HashRouter basename={\"socialNetWork\"}>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\nexport default TestApp;","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./Redax/redux-store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport TestApp from \"./App\";\r\n\r\n    ReactDOM.render(\r\n      <TestApp/>, document.getElementById('root')\r\n    );\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react';\r\nimport s from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea: React.FC<any> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea{...input}{...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input: React.FC<any> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input{...input}{...restProps}/></FormControl>\r\n\r\n};\r\n\r\nconst FormControl: React.FC<any> = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createField = (name: string,\r\n                            validate: ((value: Array<string>) => \"Field is required\" | undefined)[],\r\n                            placeholder: string, props?: any, text?: string) => {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name} validate={validate} component={Input} {...props}\r\n        />{text}\r\n    </div>\r\n}\r\n","export const required = (value: Array<string>) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\nexport const maxLengthCreator = (maxLendth: number) => (value: Array<string>) => {\r\n    if (value.length > maxLendth) return `Max length is ${maxLendth} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__37tZ_\",\"loginBlock\":\"Header_loginBlock__37klU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__M3wOW\",\"error\":\"FormControls_error__1ScBT\"};","import {Types} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nenum ActionProfileType {\r\n    ADD_POST = 'profile/ADD-POST',\r\n    SET_USERS_PROFILE = 'profile/SET_USERS_PROFILE',\r\n    SET_STATUS = 'profile/SET_STATUS',\r\n    SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n}\r\n\r\n\r\nlet initialState = {\r\n    PostsData: [\r\n        {id: 1, message: 'Hi,how a you?', likesCount: 2},\r\n        {id: 2, message: 'Yo', likesCount: 3},\r\n        {id: 3, message: 'YOyoYo', likesCount: 5}\r\n    ],\r\n    profile: {\r\n        aboutMe: '',\r\n        contacts:\r\n            {\r\n                facebook: '',\r\n                github: '',\r\n                instagram: '',\r\n                mainLink: '',\r\n                twitter: '',\r\n                vk: '',\r\n                website: '',\r\n                youtube: '',\r\n            },\r\n        fullName: \"Any\",\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: '',\r\n        photos:\r\n            {\r\n                large: '',\r\n                small: '',\r\n            },\r\n        userId: 18916,\r\n    },\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: Types): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ActionProfileType.ADD_POST:\r\n            const newPost: PostsDataStateType = {\r\n                id: 4,\r\n                message: action.postMessage,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData, newPost],\r\n            }\r\n        case ActionProfileType.SET_USERS_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case ActionProfileType.SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case ActionProfileType.SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n//Action\r\nexport const addPostAC = (postMessage: string) => {\r\n    return {\r\n        type: ActionProfileType.ADD_POST,\r\n        postMessage: postMessage\r\n    } as const\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: ActionProfileType.SET_STATUS,\r\n        status\r\n    } as const\r\n}\r\nexport const setUsersProfile = (profile: ProfileStateType) => {\r\n    return {\r\n        type: ActionProfileType.SET_USERS_PROFILE,\r\n        profile: profile\r\n    } as const\r\n}\r\nexport const savePhotoSuccess = (photos: any) => {\r\n    return {\r\n        type: ActionProfileType.SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    } as const\r\n}\r\n\r\n//Thunk\r\nexport const getUsersProfile = (userId: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUsersProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (filePhoto: any) => async (dispatch: Dispatch) => {\r\n        let response = await profileAPI.savePhoto(filePhoto)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos))\r\n        }\r\n}\r\n\r\n//Types\r\nexport type InitialStateType = typeof initialState\r\nexport type ProfileStateType = typeof initialState.profile\r\ntype PostsDataStateType = typeof initialState.PostsData[0]\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/Preloader.0a7dffe4.gif\";","import React from 'react';\r\nimport preloader from '../../../assets/images/Preloader.gif';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;"],"sourceRoot":""}