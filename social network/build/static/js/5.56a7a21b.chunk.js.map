{"version":3,"sources":["assets/images/User-Profile.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","component/Users/User.module.css","component/commen/Paginator/Paginator.tsx","component/Users/User.tsx","component/Users/Users.tsx","HOC/withAuthRedirect.tsx","Redax/users-selectors.ts","component/Users/UsersContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Paginator","props","pagesCount","Math","ceil","totalItemCount","pageSize","pages","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","currentPage","s","selected","e","onPageChanged","User","user","to","id","src","photos","small","userPhoto","followed","disabled","followingInProgress","some","unfollow","follow","name","status","Users","totalUsersCount","users","u","mapStateToProps","state","auth","WithAuthRedirect","Component","connect","resProps","isAuth","getUsers","usersPage","getCurrentPage","getPageSize","getIsFetching","isFetching","getTotalUsersCount","getFollowingInProgress","UsersContainer","getUsersThunk","this","Preloader","React","compose","followSuccess","unfollowSuccess","setCurrentPage","toggleFollowingProgress","requestUsers"],"mappings":"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","file":"static/js/5.56a7a21b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/User-Profile.00f4f37b.png\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__skdds\"};","import React, {useState} from 'react';\r\nimport s from '../../Users/User.module.css'\r\n// import cn from \"classnames\"\r\n\r\ntype UsersPropsType = {\r\n    onPageChanged: (currentPage: number) => void,\r\n    totalItemCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    portionSize: number,\r\n}\r\n\r\nconst Paginator = (props: UsersPropsType) => {\r\n\r\n    const pagesCount = Math.ceil(props.totalItemCount / props.pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionCount = Math.ceil(pagesCount / props.portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber-1) * props.portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * (props.portionSize)\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber>1 && <button onClick={()=>{setPortionNumber(portionNumber-1)}}>Prev</button> }\r\n            {pages.filter(p=>p>=leftPortionPageNumber && p<=rightPortionPageNumber).map(p => {\r\n                return (\r\n                    <span className={props.currentPage === p ? s.selected : ''}\r\n                          onClick={(e) => {\r\n                              props.onPageChanged(p)\r\n                          }}>\r\n                                {p}\r\n                            </span>\r\n                )\r\n            })}\r\n            {portionCount>portionNumber &&\r\n            <button onClick={()=>{setPortionNumber(portionNumber+1) }}>Next</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './User.module.css'\r\nimport userPhoto from \"../../assets/images/User-Profile.png\"\r\nimport {UserType} from \"../../Redax/users-reducer\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype UsersPropsType = {\r\n    user:UserType,\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    followingInProgress: Array<number>,\r\n}\r\n\r\nconst User = (props: UsersPropsType) => {\r\n    const user = props.user\r\n    return (<div>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={s.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>{user.followed\r\n                    ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  props.unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n                    : <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => props.follow(user.id)}>\r\n                        Follow</button>\r\n                }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n            <div>\r\n                <div>{\"u.location.country\"}</div>\r\n                <div>{\"u.location.city\"}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport {UserType} from \"../../Redax/users-reducer\";\r\nimport Paginator from \"../commen/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\ntype UsersPropsType = {\r\n    onPageChanged: (currentPage: number) => void,\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    users: Array<UserType>,\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    followingInProgress: Array<number>,\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={props.currentPage} pageSize={props.pageSize}\r\n                       onPageChanged={props.onPageChanged} totalItemCount={props.totalUsersCount} portionSize={10}/>\r\n            <div> {\r\n                props.users.map(u => <User user={u}\r\n                                           key={u.id}\r\n                                           follow={props.follow}\r\n                                           unfollow={props.unfollow}\r\n                                           followingInProgress={props.followingInProgress}/>\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import React, {ComponentType} from 'react';\r\nimport {AppStateType} from \"../Redax/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {InitialAuthStateType} from \"../Redax/auth-reducer\";\r\n\r\ntype MapStatePropsType={\r\n    auth:InitialAuthStateType,\r\n}\r\nconst mapStateToProps=(state:AppStateType):MapStatePropsType=>{\r\n    return {\r\n        auth:state.auth\r\n    }\r\n}\r\nexport function WithAuthRedirect <T>(Component:ComponentType<T>) {\r\n\r\n    const RedirectComponent=(props:MapStatePropsType)=>{\r\n        let {auth,...resProps}=props\r\n        if(!props.auth.isAuth)return <Redirect to={'/login'}/>\r\n        return <Component{...resProps as T}/>\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n};\r\n\r\nexport default WithAuthRedirect;","import { createSelector } from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {UserType} from \"./users-reducer\";\r\n\r\n\r\n\r\n//reselect\r\n/*export const getUsersSelector = (state: AppStateType): Array<UserType> => {\r\n    return getUsers(state).filter(u=>true)\r\n}\r\nexport const getUsersSuper = createSelector(getUsers,getIsFetching(users,isFetching)=>{\r\n    users.filter(u=>true)\r\n})*/\r\n\r\n//selectors\r\nexport const getUsers = (state: AppStateType): Array<UserType> => {\r\n    return state.usersPage.users\r\n}\r\nexport const getCurrentPage = (state: AppStateType): number => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getPageSize = (state: AppStateType): number => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getIsFetching = (state: AppStateType): boolean => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType): number => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType): Array<number> => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redax/redux-store\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    followSuccess, toggleFollowingProgress,\r\n    setCurrentPage,\r\n    unfollowSuccess,\r\n    requestUsers, UserType,\r\n} from \"../../Redax/users-reducer\";\r\nimport Preloader from \"../commen/Preloader/Preloader\";\r\nimport WithAuthRedirect from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redax/users-selectors\";\r\n\r\n\r\nexport type MapStatePropsType = {\r\n    users: Array<UserType>,\r\n    currentPage: number,\r\n    pageSize: number,\r\n    isFetching: boolean,\r\n    totalUsersCount: number,\r\n    followingInProgress: Array<number>,\r\n}\r\n\r\nexport type MapDispatchUsersToPropsType = {\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    setCurrentPage: (currentPage: number) => void,\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void,\r\n    getUsersThunk: (currentPage: number, pageSize: number) => void,\r\n}\r\nexport type UsersContainerPropsType = MapStatePropsType & MapDispatchUsersToPropsType\r\n\r\n\r\nexport class UsersContainer extends React.Component<UsersContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsersThunk(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (currentPage: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsersThunk(currentPage, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    onPageChanged={this.onPageChanged}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        // users: getUsersSuper(state),//reselect\r\n        users: getUsers(state),\r\n        currentPage: getCurrentPage(state),\r\n        pageSize: getPageSize(state),\r\n        isFetching: getIsFetching(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {\r\n        follow: followSuccess,\r\n        unfollow: unfollowSuccess,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUsersThunk: requestUsers,\r\n    }),\r\n    WithAuthRedirect)(UsersContainer)\r\n\r\n"],"sourceRoot":""}