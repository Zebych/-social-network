[{"E:\\social network git\\-social-network\\social network\\src\\index.tsx":"1","E:\\social network git\\-social-network\\social network\\src\\reportWebVitals.ts":"2","E:\\social network git\\-social-network\\social network\\src\\App.tsx":"3","E:\\social network git\\-social-network\\social network\\src\\Redax\\redux-store.tsx":"4","E:\\social network git\\-social-network\\social network\\src\\component\\Login\\Login.tsx":"5","E:\\social network git\\-social-network\\social network\\src\\component\\Navbar\\Navbar.tsx":"6","E:\\social network git\\-social-network\\social network\\src\\Redax\\dialogsPage-reducer.ts":"7","E:\\social network git\\-social-network\\social network\\src\\Redax\\auth-reducer.ts":"8","E:\\social network git\\-social-network\\social network\\src\\Redax\\users-reducer.ts":"9","E:\\social network git\\-social-network\\social network\\src\\Redax\\profile-reducer.ts":"10","E:\\social network git\\-social-network\\social network\\src\\component\\Users\\UsersContainer.tsx":"11","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\DialogsContainer.tsx":"12","E:\\social network git\\-social-network\\social network\\src\\api\\api.js":"13","E:\\social network git\\-social-network\\social network\\src\\component\\Header\\Header.tsx":"14","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\Dialogs.tsx":"15","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Profile.tsx":"16","E:\\social network git\\-social-network\\social network\\src\\component\\Users\\Users.tsx":"17","E:\\social network git\\-social-network\\social network\\src\\component\\commen\\preloader\\Preloader.tsx":"18","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\Message\\Message.tsx":"19","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\DialogItem\\DialogsItem.tsx":"20","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\MyPostsContainer.tsx":"21","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx":"22","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\MyPosts.tsx":"23","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\Post\\Post.tsx":"24","E:\\social network git\\-social-network\\social network\\src\\HOC\\withAuthRedirect.tsx":"25","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileInfo\\ProfileStatus.tsx":"26","E:\\social network git\\-social-network\\social network\\src\\utils\\validators\\validators.ts":"27","E:\\social network git\\-social-network\\social network\\src\\component\\commen\\Preloader\\Preloader.tsx":"28","E:\\social network git\\-social-network\\social network\\src\\component\\commen\\FormControls\\FormControls.tsx":"29","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"30","E:\\social network git\\-social-network\\social network\\src\\Redax\\app-reducer.ts":"31","E:\\social network git\\-social-network\\social network\\src\\Redax\\users-selectors.ts":"32","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"33","E:\\social network git\\-social-network\\social network\\src\\utils\\object_helpers\\object-helpers.js":"34","E:\\social network git\\-social-network\\social network\\src\\component\\commen\\Paginator\\Paginator.tsx":"35","E:\\social network git\\-social-network\\social network\\src\\component\\Users\\User.tsx":"36","E:\\social network git\\-social-network\\social network\\src\\component\\Header\\HeaderContainer.tsx":"37","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileContainer.tsx":"38","E:\\social network git\\-social-network\\social network\\src\\HOC\\withSuspense.tsx":"39"},{"size":644,"mtime":1635401589922,"results":"40","hashOfConfig":"41"},{"size":440,"mtime":1628889227906,"results":"42","hashOfConfig":"41"},{"size":2431,"mtime":1635928522701,"results":"43","hashOfConfig":"41"},{"size":1154,"mtime":1635944031268,"results":"44","hashOfConfig":"41"},{"size":1717,"mtime":1634892715652,"results":"45","hashOfConfig":"41"},{"size":1105,"mtime":1628889227897,"results":"46","hashOfConfig":"41"},{"size":1133,"mtime":1634880951048,"results":"47","hashOfConfig":"41"},{"size":2090,"mtime":1634884308204,"results":"48","hashOfConfig":"41"},{"size":5206,"mtime":1635410101565,"results":"49","hashOfConfig":"41"},{"size":3854,"mtime":1636009980342,"results":"50","hashOfConfig":"41"},{"size":3013,"mtime":1634966574763,"results":"51","hashOfConfig":"41"},{"size":1106,"mtime":1632762581621,"results":"52","hashOfConfig":"41"},{"size":1543,"mtime":1636010242713,"results":"53","hashOfConfig":"41"},{"size":785,"mtime":1632830758690,"results":"54","hashOfConfig":"41"},{"size":1414,"mtime":1630921465379,"results":"55","hashOfConfig":"41"},{"size":827,"mtime":1636005568815,"results":"56","hashOfConfig":"41"},{"size":1386,"mtime":1635408990256,"results":"57","hashOfConfig":"41"},{"size":244,"mtime":1628889227904,"results":"58","hashOfConfig":"41"},{"size":255,"mtime":1628889227895,"results":"59","hashOfConfig":"41"},{"size":434,"mtime":1628889227893,"results":"60","hashOfConfig":"41"},{"size":856,"mtime":1632831279167,"results":"61","hashOfConfig":"41"},{"size":1813,"mtime":1636007805264,"results":"62","hashOfConfig":"41"},{"size":1877,"mtime":1633605335216,"results":"63","hashOfConfig":"41"},{"size":515,"mtime":1628889227899,"results":"64","hashOfConfig":"41"},{"size":795,"mtime":1629813907298,"results":"65","hashOfConfig":"41"},{"size":1625,"mtime":1629911255776,"results":"66","hashOfConfig":"41"},{"size":307,"mtime":1630916831792,"results":"67","hashOfConfig":"41"},{"size":244,"mtime":1628889227904,"results":"68","hashOfConfig":"41"},{"size":1278,"mtime":1634892945374,"results":"69","hashOfConfig":"41"},{"size":884,"mtime":1630921465368,"results":"70","hashOfConfig":"41"},{"size":985,"mtime":1634883198498,"results":"71","hashOfConfig":"41"},{"size":1088,"mtime":1633248063417,"results":"72","hashOfConfig":"41"},{"size":1210,"mtime":1633584530416,"results":"73","hashOfConfig":"41"},{"size":599,"mtime":1634887857715,"results":"74","hashOfConfig":"41"},{"size":1579,"mtime":1635939156521,"results":"75","hashOfConfig":"41"},{"size":1683,"mtime":1634966032840,"results":"76","hashOfConfig":"41"},{"size":1047,"mtime":1632830758674,"results":"77","hashOfConfig":"41"},{"size":2260,"mtime":1635953576405,"results":"78","hashOfConfig":"41"},{"size":311,"mtime":1635927985715,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"1tw51aq",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"83"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"83"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"83"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"83"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"83"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"83"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"E:\\social network git\\-social-network\\social network\\src\\index.tsx",["174","175","176","177"],"import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./Redax/redux-store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport TestApp from \"./App\";\r\n\r\n    ReactDOM.render(\r\n      <TestApp/>, document.getElementById('root')\r\n    );\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["178","179"],"E:\\social network git\\-social-network\\social network\\src\\reportWebVitals.ts",[],"E:\\social network git\\-social-network\\social network\\src\\App.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\redux-store.tsx",["180"],"import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer, {addPostAC, savePhotoSuccess, setStatus, setUsersProfile} from \"./profile-reducer\";\r\nimport dialogsPageReducer, {AddMessageAC} from \"./dialogsPage-reducer\";\r\nimport React from \"react\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form:formReducer,\r\n    app:appReducer,\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type Types =\r\n    ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof AddMessageAC>\r\n    | ReturnType<typeof setUsersProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof savePhotoSuccess>\r\n// @ts-ignore\r\nwindow.store = store;\r\nexport default store;\r\n\r\n\r\n\r\n","E:\\social network git\\-social-network\\social network\\src\\component\\Login\\Login.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Navbar\\Navbar.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\dialogsPage-reducer.ts",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\auth-reducer.ts",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\users-reducer.ts",["181"],"import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object_helpers/object-helpers\";\r\n\r\nenum ActionsUsersType {\r\n    FOLLOW = 'users/FOLLOW',\r\n    UNFOLLOW = 'users/UNFOLLOW',\r\n    SET_USERS = 'users/SET_USERS',\r\n    SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE',\r\n    SET_TOTAL_COUNT_PAGE = 'users/SET_TOTAL_COUNT_PAGE',\r\n    TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING',\r\n    TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as number[],\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: UsersTypeAC): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ActionsUsersType.FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId,\"id\", {followed: true})\r\n            }\r\n        case ActionsUsersType.UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users,action.userId,\"id\", {followed: false})\r\n            }\r\n        case ActionsUsersType.SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case ActionsUsersType.SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case ActionsUsersType.SET_TOTAL_COUNT_PAGE:\r\n            return {\r\n                ...state, totalUsersCount: action.totalCount\r\n            }\r\n        case ActionsUsersType.TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case ActionsUsersType.TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n//Action\r\nexport const followSuccess = (userId: number) => {\r\n    return {type: ActionsUsersType.FOLLOW, userId} as const\r\n}\r\nexport const unfollowSuccess = (userId: number) => {\r\n    return {type: ActionsUsersType.UNFOLLOW, userId} as const\r\n}\r\nexport const setUsers = (users: UserType[]) => {\r\n    return {type: ActionsUsersType.SET_USERS, users} as const\r\n}\r\nexport const setCurrentPage = (page: number) => {\r\n    return {type: ActionsUsersType.SET_CURRENT_PAGE, currentPage: page} as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {type: ActionsUsersType.SET_TOTAL_COUNT_PAGE, totalCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: ActionsUsersType.TOGGLE_IS_FETCHING, isFetching} as const\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => {\r\n    return {type: ActionsUsersType.TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} as const\r\n}\r\n\r\n//Thunk\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: Dispatch<UsersTypeAC>) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    let response = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsersCount(response.totalCount))\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch<UsersTypeAC>) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\nexport const unfollow = (userId: number) => async (dispatch: Dispatch<UsersTypeAC>) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n//refactor thunk\r\nconst followUnfollowFlow = async (dispatch: Dispatch<UsersTypeAC>, userId: number, apiMethod: (userId: number) => any, actionCreator: (userId: number) => any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\n//Types\r\nexport type UsersTypeAC =\r\n    ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\n\r\ntype LocationType = {\r\n    city: string,\r\n    country: string,\r\n}\r\ntype PhotosType = {\r\n    small: string,\r\n    large: string,\r\n}\r\nexport type UserType = {\r\n    id: number,\r\n    photos: PhotosType,\r\n    name: string,\r\n    status: string,\r\n    followed: boolean,\r\n    location: LocationType,\r\n    uniqueUrlName: null,\r\n}\r\nexport default usersReducer;","E:\\social network git\\-social-network\\social network\\src\\Redax\\profile-reducer.ts",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Users\\UsersContainer.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\DialogsContainer.tsx",["182"],"import React from 'react';\r\nimport {AddMessageAC} from \"../../Redax/dialogsPage-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType, Types} from \"../../Redax/redux-store\";\r\nimport WithAuthRedirect from \"../../HOC/withAuthRedirect\";\r\nimport { compose } from 'redux';\r\n\r\ntype DialogDataType = {\r\n    id: number,\r\n    name: string,\r\n}\r\nexport type MessageType = {\r\n    id: number,\r\n    message: string,\r\n}\r\nexport type dialogsPageType = {\r\n    MessageData: MessageType[],\r\n    DialogData: DialogDataType[],\r\n    newMessage: string,\r\n}\r\ntype MapStateToPropsType={\r\n    dialogsPage:dialogsPageType,\r\n}\r\nconst mapStateToProps=(state:AppStateType):MapStateToPropsType=>{\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch:(action: Types) => void)=>{\r\n    return{\r\n        sendMessage:(newMessageBody:string)=>{\r\n            dispatch(AddMessageAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(/*WithAuthRedirect,*/connect(mapStateToProps,mapDispatchToProps))(Dialogs);\r\n\r\n\r\n","E:\\social network git\\-social-network\\social network\\src\\api\\api.js",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Header\\Header.tsx",["183"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport c from './Header.module.css';\r\n\r\ntype HeaderPropsType={\r\n    login: string | null,\r\n    isAuth:boolean,\r\n    logout:()=>void\r\n}\r\nconst Header:React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <div className={c.header}>\r\n            <img\r\n                src={'https://st.depositphotos.com/2321413/3088/v/600/depositphotos_30889807-stock-illustration-simple-social-media-icon.jpg'}/>\r\n            <div className={c.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login}- <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\Dialogs.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Profile.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Users\\Users.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\commen\\preloader\\Preloader.tsx",["184"],"import React from 'react';\r\nimport preloader from '../../../assets/images/Preloader.gif';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;",["185","186"],"E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\Message\\Message.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\DialogItem\\DialogsItem.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\MyPostsContainer.tsx",["187"],"import React from 'react';\r\nimport {addPostAC} from \"../../../Redax/profile-reducer\";\r\nimport MyPosts, {PostsDataType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {Types} from \"../../../Redax/redux-store\";\r\nimport { RootStateType} from \"../../../Redax/store\";\r\n\r\n\r\ntype MapStateToPropsType={\r\n    PostsData:Array<PostsDataType>,\r\n    newPostText:string,\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType):MapStateToPropsType => {\r\n    return {\r\n        PostsData: state.profilePage.PostsData,\r\n        newPostText: state.profilePage.messageNewPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: (action: Types) => void) => {\r\n    return {\r\n        addPost: (postMessage: string) => {\r\n            dispatch(addPostAC(postMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\n","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx",["188","189","190"],"E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\MyPosts.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\Post\\Post.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\HOC\\withAuthRedirect.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileInfo\\ProfileStatus.tsx",["191"],"import React, {ChangeEvent} from \"react\";\r\n\r\nimport c from './ProfileInfo.module.css'\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string,\r\n    updateStatus: (status: string) => void\r\n}\r\ntype LocalStateType = {\r\n    editMode: boolean,\r\n    status: string,\r\n}\r\n\r\nexport class ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n    state: LocalStateType = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ProfileStatusPropsType, prevState: LocalStateType) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.state.status})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {!this.state.editMode &&\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '----'}</span>}\r\n                </div>\r\n                <div>\r\n                    {this.state.editMode &&\r\n                    <input onChange={this.onStatusChange} autoFocus onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",["192","193"],"E:\\social network git\\-social-network\\social network\\src\\utils\\validators\\validators.ts",[],"E:\\social network git\\-social-network\\social network\\src\\component\\commen\\Preloader\\Preloader.tsx",["194"],"E:\\social network git\\-social-network\\social network\\src\\component\\commen\\FormControls\\FormControls.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\app-reducer.ts",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\users-selectors.ts",["195"],"import { createSelector } from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {UserType} from \"./users-reducer\";\r\n\r\n\r\n\r\n//reselect\r\n/*export const getUsersSelector = (state: AppStateType): Array<UserType> => {\r\n    return getUsers(state).filter(u=>true)\r\n}\r\nexport const getUsersSuper = createSelector(getUsers,getIsFetching(users,isFetching)=>{\r\n    users.filter(u=>true)\r\n})*/\r\n\r\n//selectors\r\nexport const getUsers = (state: AppStateType): Array<UserType> => {\r\n    return state.usersPage.users\r\n}\r\nexport const getCurrentPage = (state: AppStateType): number => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getPageSize = (state: AppStateType): number => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getIsFetching = (state: AppStateType): boolean => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType): number => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType): Array<number> => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",["196"],"import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport c from './ProfileInfo.module.css'\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string,\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusHook: React.FC<ProfileStatusPropsType> = (props) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (<div>\r\n            <div>\r\n                {!editMode &&\r\n                <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>}\r\n            </div>\r\n            <div>\r\n                {editMode &&\r\n                <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode}\r\n                       value={status}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","E:\\social network git\\-social-network\\social network\\src\\utils\\object_helpers\\object-helpers.js",[],["197","198"],"E:\\social network git\\-social-network\\social network\\src\\component\\commen\\Paginator\\Paginator.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Users\\User.tsx",["199"],"import React from 'react';\r\nimport s from './User.module.css'\r\nimport userPhoto from \"../../assets/images/User-Profile.png\"\r\nimport {UserType} from \"../../Redax/users-reducer\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype UsersPropsType = {\r\n    user:UserType,\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    followingInProgress: Array<number>,\r\n}\r\n\r\nconst User = (props: UsersPropsType) => {\r\n    const user = props.user\r\n    return (<div>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={s.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>{user.followed\r\n                    ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  props.unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n                    : <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => props.follow(user.id)}>\r\n                        Follow</button>\r\n                }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n            <div>\r\n                <div>{\"u.location.country\"}</div>\r\n                <div>{\"u.location.city\"}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","E:\\social network git\\-social-network\\social network\\src\\component\\Header\\HeaderContainer.tsx",["200"],"import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from \"react-redux\";\r\nimport {InitialAuthStateType, Logout, setAuthUserData} from \"../../Redax/auth-reducer\";\r\nimport {AppStateType} from \"../../Redax/redux-store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    // auth: InitialAuthStateType\r\n    login: string | null,\r\n    isAuth:boolean,\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setAuthUserData: (id: null | number, email: null | string, login: null | string, isAuth: boolean) => void,\r\n    // getAuthUserData: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass HeaderContainer extends React.Component <HeaderContainerPropsType> {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} logout={Logout}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    login: state.auth.login,\r\n    isAuth:state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData, Logout})(HeaderContainer);\r\n","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileContainer.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\HOC\\withSuspense.tsx",[],{"ruleId":"201","severity":1,"message":"202","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":13},{"ruleId":"201","severity":1,"message":"205","line":6,"column":9,"nodeType":"203","messageId":"204","endLine":6,"endColumn":22},{"ruleId":"201","severity":1,"message":"206","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":11},{"ruleId":"201","severity":1,"message":"207","line":8,"column":9,"nodeType":"203","messageId":"204","endLine":8,"endColumn":17},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"201","severity":1,"message":"212","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":13},{"ruleId":"213","severity":1,"message":"214","line":60,"column":65,"nodeType":"215","messageId":"216","endLine":60,"endColumn":67},{"ruleId":"201","severity":1,"message":"217","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":13,"column":13,"nodeType":"220","endLine":14,"endColumn":145},{"ruleId":"218","severity":1,"message":"219","line":7,"column":13,"nodeType":"220","endLine":7,"endColumn":35},{"ruleId":"208","replacedBy":"221"},{"ruleId":"210","replacedBy":"222"},{"ruleId":"201","severity":1,"message":"212","line":1,"column":8,"nodeType":"203","messageId":"204","endLine":1,"endColumn":13},{"ruleId":"201","severity":1,"message":"223","line":6,"column":9,"nodeType":"203","messageId":"204","endLine":6,"endColumn":22},{"ruleId":"201","severity":1,"message":"224","line":9,"column":6,"nodeType":"203","messageId":"204","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":41,"column":17,"nodeType":"220","endLine":41,"endColumn":105},{"ruleId":"201","severity":1,"message":"225","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":9},{"ruleId":"208","replacedBy":"226"},{"ruleId":"210","replacedBy":"227"},{"ruleId":"218","severity":1,"message":"219","line":7,"column":13,"nodeType":"220","endLine":7,"endColumn":35},{"ruleId":"201","severity":1,"message":"228","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":24},{"ruleId":"201","severity":1,"message":"225","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":9},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"218","severity":1,"message":"219","line":20,"column":25,"nodeType":"220","endLine":21,"endColumn":55},{"ruleId":"201","severity":1,"message":"229","line":4,"column":9,"nodeType":"203","messageId":"204","endLine":4,"endColumn":29},"@typescript-eslint/no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'App' is defined but never used.","'Provider' is defined but never used.","no-native-reassign",["230"],"no-negated-in-lhs",["231"],"'React' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'WithAuthRedirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["230"],["231"],"'ProfileStatus' is defined but never used.","'FileType' is defined but never used.","'c' is defined but never used.",["230"],["231"],"'createSelector' is defined but never used.","'InitialAuthStateType' is defined but never used.","no-global-assign","no-unsafe-negation"]