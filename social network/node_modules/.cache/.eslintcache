[{"E:\\social network git\\-social-network\\social network\\src\\index.tsx":"1","E:\\social network git\\-social-network\\social network\\src\\reportWebVitals.ts":"2","E:\\social network git\\-social-network\\social network\\src\\App.tsx":"3","E:\\social network git\\-social-network\\social network\\src\\Redax\\redux-store.tsx":"4","E:\\social network git\\-social-network\\social network\\src\\Redax\\dialogsPage-reducer.ts":"5","E:\\social network git\\-social-network\\social network\\src\\Redax\\auth-reducer.ts":"6","E:\\social network git\\-social-network\\social network\\src\\Redax\\profile-reducer.ts":"7","E:\\social network git\\-social-network\\social network\\src\\Redax\\users-reducer.ts":"8","E:\\social network git\\-social-network\\social network\\src\\component\\Users\\UsersContainer.tsx":"9","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\DialogsContainer.tsx":"10","E:\\social network git\\-social-network\\social network\\src\\component\\Navbar\\Navbar.tsx":"11","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileContanier.tsx":"12","E:\\social network git\\-social-network\\social network\\src\\component\\Header\\HeaderContanier.tsx":"13","E:\\social network git\\-social-network\\social network\\src\\api\\api.js":"14","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\Dialogs.tsx":"15","E:\\social network git\\-social-network\\social network\\src\\component\\Users\\Users.tsx":"16","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Profile.tsx":"17","E:\\social network git\\-social-network\\social network\\src\\component\\Header\\Header.tsx":"18","E:\\social network git\\-social-network\\social network\\src\\component\\commen\\preloader\\Preloader.tsx":"19","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\Message\\Message.tsx":"20","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\DialogItem\\DialogsItem.tsx":"21","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx":"22","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\MyPostsContainer.tsx":"23","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\MyPosts.tsx":"24","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\Post\\Post.tsx":"25","E:\\social network git\\-social-network\\social network\\src\\component\\Login\\Login.tsx":"26"},{"size":731,"mtime":1628889227904,"results":"27","hashOfConfig":"28"},{"size":440,"mtime":1628889227906,"results":"29","hashOfConfig":"28"},{"size":1026,"mtime":1629784402602,"results":"30","hashOfConfig":"28"},{"size":649,"mtime":1628889227866,"results":"31","hashOfConfig":"28"},{"size":1490,"mtime":1629784564639,"results":"32","hashOfConfig":"28"},{"size":1004,"mtime":1628889227863,"results":"33","hashOfConfig":"28"},{"size":3067,"mtime":1629786807962,"results":"34","hashOfConfig":"28"},{"size":3550,"mtime":1629198372703,"results":"35","hashOfConfig":"28"},{"size":2717,"mtime":1629704047333,"results":"36","hashOfConfig":"28"},{"size":1282,"mtime":1629785230258,"results":"37","hashOfConfig":"28"},{"size":1105,"mtime":1628889227897,"results":"38","hashOfConfig":"28"},{"size":1707,"mtime":1629786867135,"results":"39","hashOfConfig":"28"},{"size":1302,"mtime":1628889227896,"results":"40","hashOfConfig":"28"},{"size":400,"mtime":1628889227867,"results":"41","hashOfConfig":"28"},{"size":1903,"mtime":1629784467115,"results":"42","hashOfConfig":"28"},{"size":3759,"mtime":1628889227903,"results":"43","hashOfConfig":"28"},{"size":530,"mtime":1629786867135,"results":"44","hashOfConfig":"28"},{"size":759,"mtime":1628889227895,"results":"45","hashOfConfig":"28"},{"size":244,"mtime":1628889227904,"results":"46","hashOfConfig":"28"},{"size":255,"mtime":1628889227895,"results":"47","hashOfConfig":"28"},{"size":434,"mtime":1628889227893,"results":"48","hashOfConfig":"28"},{"size":752,"mtime":1629786932364,"results":"49","hashOfConfig":"28"},{"size":816,"mtime":1628889227899,"results":"50","hashOfConfig":"28"},{"size":1563,"mtime":1628889227898,"results":"51","hashOfConfig":"28"},{"size":515,"mtime":1628889227899,"results":"52","hashOfConfig":"28"},{"size":150,"mtime":1629784402718,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1tw51aq",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\social network git\\-social-network\\social network\\src\\index.tsx",[],["114","115"],"E:\\social network git\\-social-network\\social network\\src\\reportWebVitals.ts",[],"E:\\social network git\\-social-network\\social network\\src\\App.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\redux-store.tsx",["116","117"],"import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsPageReducer from \"./dialogsPage-reducer\";\r\nimport React from \"react\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport AuthReducer, {setAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    usersPage: usersReducer,\r\n    auth: AuthReducer,\r\n})\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\n// @ts-ignore\r\nwindow.store=store;\r\nexport default store;\r\n\r\n\r\n\r\n","E:\\social network git\\-social-network\\social network\\src\\Redax\\dialogsPage-reducer.ts",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\auth-reducer.ts",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\profile-reducer.ts",[],"E:\\social network git\\-social-network\\social network\\src\\Redax\\users-reducer.ts",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Users\\UsersContainer.tsx",["118"],"E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\DialogsContainer.tsx",["119"],"E:\\social network git\\-social-network\\social network\\src\\component\\Navbar\\Navbar.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileContanier.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Header\\HeaderContanier.tsx",["120"],"import React from 'react';\r\nimport Header from './Header';\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport AuthReducer, {InitialAuthStateType, setAuthUserData} from \"../../Redax/auth-reducer\";\r\nimport {AppStateType} from \"../../Redax/redux-store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n   auth:InitialAuthStateType\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setAuthUserData: (id: null | number, email: null | string, login: null | string,) => void,\r\n}\r\n\r\ntype HeaderContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass HeaderContainer extends React.Component <HeaderContainerPropsType> {\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {withCredentials: true})\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, email, login} = response.data.data\r\n                    this.props.setAuthUserData(id, email, login)\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData})(HeaderContainer);\r\n","E:\\social network git\\-social-network\\social network\\src\\api\\api.js",[],["121","122"],"E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\Dialogs.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Users\\Users.tsx",["123"],"import React from 'react';\r\nimport s from './Users.module.css'\r\nimport userPhoto from \"../../assets/images/User-Profile.png\"\r\nimport {UserType} from \"../../Redax/users-reducer\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\ntype UsersPropsType = {\r\n    onPageChanged: (currentPage: number) => void,\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    users: Array<UserType>,\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return (\r\n                        <span className={props.currentPage === p ? s.selected : ''}\r\n                              onClick={(e) => {\r\n                                  props.onPageChanged(p)\r\n                              }}>\r\n                                {p}\r\n                            </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                        <div>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + u.id}>\r\n                                    <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                                         className={s.userPhoto}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>{u.followed\r\n                                ? <button onClick={() => {\r\n                                    axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\r\n                                        withCredentials: true,\r\n                                        headers: {'API-KEY': '884980f5-daa7-48cc-9fee-f7e12bbe8e95'}\r\n                                    })\r\n                                        .then(response => {\r\n                                            if (response.data.resultCode === 0) {\r\n                                                props.unfollow(u.id)\r\n                                            }\r\n                                        })\r\n\r\n                                }}>Unfollow</button>\r\n                                : <button onClick={() => {\r\n                                    axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, {\r\n                                        withCredentials: true,\r\n                                        headers: {'API-KEY': '884980f5-daa7-48cc-9fee-f7e12bbe8e95'}\r\n                                    })\r\n                                        .then(response => {\r\n                                            if (response.data.resultCode === 0) {\r\n                                                props.follow(u.id)\r\n                                            }\r\n                                        })\r\n\r\n                                }}>Follow</button>\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div>{\"u.location.country\"}</div>\r\n                            <div>{\"u.location.city\"}</div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Profile.tsx",["124"],"E:\\social network git\\-social-network\\social network\\src\\component\\Header\\Header.tsx",["125"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport c from './Header.module.css';\r\nimport {InitialAuthStateType} from \"../../Redax/auth-reducer\";\r\n\r\ntype HeaderPropsType={\r\n    auth:InitialAuthStateType\r\n}\r\nconst Header:React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <div className={c.header}>\r\n            <img\r\n                src={'https://st.depositphotos.com/2321413/3088/v/600/depositphotos_30889807-stock-illustration-simple-social-media-icon.jpg'}/>\r\n            <div className={c.loginBlock}>\r\n                {props.auth.isAuth\r\n                    ? props.auth.login\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n","E:\\social network git\\-social-network\\social network\\src\\component\\commen\\preloader\\Preloader.tsx",["126"],"import React from 'react';\r\nimport preloader from '../../../assets/images/Preloader.gif';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\Message\\Message.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Dialogs\\DialogItem\\DialogsItem.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\ProfileInfo\\ProfileInfo.tsx",["127","128","129"],"E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\MyPostsContainer.tsx",["130"],"import React from 'react';\r\nimport {AddPostAC, UpdateNewPostTextAC} from \"../../../Redax/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport { RootStateType, Types} from \"../../../Redax/store\";\r\n\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        PostsData: state.profilePage.PostsData,\r\n        newPostText: state.profilePage.messageNewPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: (action: Types) => void) => {\r\n    return {\r\n        updateNewPostText: (newText: string) => {\r\n            dispatch(UpdateNewPostTextAC(newText))\r\n        },\r\n        addPost: (postMessage: string) => {\r\n            dispatch(AddPostAC(postMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\n","E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\MyPosts.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Profile\\Myposts\\Post\\Post.tsx",[],"E:\\social network git\\-social-network\\social network\\src\\component\\Login\\Login.tsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":13},{"ruleId":"135","severity":1,"message":"139","line":6,"column":22,"nodeType":"137","messageId":"138","endLine":6,"endColumn":37},{"ruleId":"135","severity":1,"message":"140","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"135","severity":1,"message":"141","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":19},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"142","severity":1,"message":"143","line":45,"column":37,"nodeType":"144","endLine":46,"endColumn":67},{"ruleId":"135","severity":1,"message":"145","line":5,"column":21,"nodeType":"137","messageId":"138","endLine":5,"endColumn":32},{"ruleId":"142","severity":1,"message":"143","line":12,"column":13,"nodeType":"144","endLine":13,"endColumn":145},{"ruleId":"142","severity":1,"message":"143","line":7,"column":13,"nodeType":"144","endLine":7,"endColumn":35},{"ruleId":"135","severity":1,"message":"145","line":4,"column":21,"nodeType":"137","messageId":"138","endLine":4,"endColumn":32},{"ruleId":"142","severity":1,"message":"143","line":17,"column":17,"nodeType":"144","endLine":18,"endColumn":130},{"ruleId":"142","severity":1,"message":"143","line":21,"column":17,"nodeType":"144","endLine":21,"endColumn":49},{"ruleId":"135","severity":1,"message":"136","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'setAuthUserData' is defined but never used.","'axios' is defined but never used.","'AuthReducer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ProfileType' is defined but never used.","no-global-assign","no-unsafe-negation"]