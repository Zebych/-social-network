{"ast":null,"code":"var _jsxFileName = \"E:\\\\mySocial\\\\social network\\\\-social-network\\\\social network\\\\src\\\\component\\\\Dialogs\\\\Dialogs.tsx\";\nimport React from 'react';\nimport c from './Dialogs.module.css';\nimport { DialogItem } from \"./DialogItem/DialogsItem\";\nimport { Message } from \"./Message/Message\";\nimport { AddMessageAC, UpdateNewMessageTextAC } from \"../../Redax/state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  const DialogsElement = props.DialogData.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    id: d.id,\n    name: d.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 54\n  }, this));\n  const MessageElement = props.MessageData.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 55\n  }, this));\n\n  const onChangeNewMessage = e => {\n    const newMassage = e.currentTarget.value;\n    props.dispatch(UpdateNewMessageTextAC(newMassage));\n  };\n\n  const addMessage = e => {\n    let messageBody = e.currentTarget.value;\n\n    if (messageBody) {\n      props.dispatch(AddMessageAC(messageBody));\n      e.currentTarget.value = '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.dialogItem,\n      children: DialogsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.messages,\n      children: MessageElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onChangeNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMessage,\n        children: \"add message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["E:/mySocial/social network/-social-network/social network/src/component/Dialogs/Dialogs.tsx"],"names":["React","c","DialogItem","Message","AddMessageAC","UpdateNewMessageTextAC","Dialogs","props","DialogsElement","DialogData","map","d","id","name","MessageElement","MessageData","m","message","onChangeNewMessage","e","newMassage","currentTarget","value","dispatch","addMessage","messageBody","dialogs","dialogItem","messages"],"mappings":";AAAA,OAAOA,KAAP,MAA6C,OAA7C;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAAQC,YAAR,EAA6BC,sBAA7B,QAA0D,mBAA1D;;;AAiBA,MAAMC,OAAkC,GAAIC,KAAD,IAAW;AAClD,QAAMC,cAAc,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,EAAE,EAAEA,CAAC,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAED,CAAC,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,UAA1B,CAAvB;AACA,QAAMC,cAAc,GAAGP,KAAK,CAACQ,WAAN,CAAkBL,GAAlB,CAAsBM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,UAA3B,CAAvB;;AAEA,QAAMC,kBAAkB,GAAEC,CAAD,IAAsC;AAC3D,UAAMC,UAAU,GAACD,CAAC,CAACE,aAAF,CAAgBC,KAAjC;AACAf,IAAAA,KAAK,CAACgB,QAAN,CAAelB,sBAAsB,CAACe,UAAD,CAArC;AACH,GAHD;;AAKA,QAAMI,UAAU,GAAEL,CAAD,IAAmC;AACxD,QAAIM,WAAW,GAACN,CAAC,CAACE,aAAF,CAAgBC,KAAhC;;AACQ,QAAGG,WAAH,EAAe;AACXlB,MAAAA,KAAK,CAACgB,QAAN,CAAenB,YAAY,CAACqB,WAAD,CAA3B;AACAN,MAAAA,CAAC,CAACE,aAAF,CAAgBC,KAAhB,GAAsB,EAAtB;AACH;AACJ,GAND;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAErB,CAAC,CAACyB,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEzB,CAAC,CAAC0B,UAAlB;AAAA,gBACKnB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEP,CAAC,CAAC2B,QAAlB;AAAA,gBACKd;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,6BACI;AAAU,QAAA,QAAQ,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEM,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAjCD;;KAAMlB,O;AAoCN,eAAeA,OAAf","sourcesContent":["import React, {ChangeEvent, MouseEvent} from 'react';\r\nimport c from './Dialogs.module.css';\r\nimport {DialogItem} from \"./DialogItem/DialogsItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {AddMessageAC, Types, UpdateNewMessageTextAC} from \"../../Redax/state\";\r\n\r\ntype DialogDataType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\ntype PropsDialogType = {\r\n    DialogData: DialogDataType[]\r\n    MessageData: MessageType[]\r\n    dispatch:(action:Types)=>void\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<PropsDialogType> = (props) => {\r\n    const DialogsElement = props.DialogData.map(d => <DialogItem id={d.id} name={d.name}/>)\r\n    const MessageElement = props.MessageData.map(m => <Message message={m.message}/>)\r\n\r\n    const onChangeNewMessage=(e:ChangeEvent<HTMLTextAreaElement>)=>{\r\n        const newMassage=e.currentTarget.value\r\n        props.dispatch(UpdateNewMessageTextAC(newMassage))\r\n    }\r\n\r\n    const addMessage=(e:MouseEvent<HTMLButtonElement>)=>{\r\nlet messageBody=e.currentTarget.value\r\n        if(messageBody){\r\n            props.dispatch(AddMessageAC(messageBody))\r\n            e.currentTarget.value=''\r\n        }\r\n    }\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogItem}>\r\n                {DialogsElement}\r\n            </div>\r\n            <div className={c.messages}>\r\n                {MessageElement}\r\n            </div>\r\n            <div>\r\n                <textarea onChange={onChangeNewMessage} ></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={addMessage}>add message</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n"]},"metadata":{},"sourceType":"module"}