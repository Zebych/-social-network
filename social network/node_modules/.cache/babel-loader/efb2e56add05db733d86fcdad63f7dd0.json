{"ast":null,"code":"const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst store = {\n  _state: {\n    profilePage: {\n      PostsData: [{\n        id: 1,\n        message: 'Hi,how a you?',\n        likesCount: 2\n      }, {\n        id: 2,\n        message: 'Yo',\n        likesCount: 3\n      }, {\n        id: 3,\n        message: 'YOyoYo',\n        likesCount: 5\n      }],\n      messageNewPostText: \"\"\n    },\n    dialogsPage: {\n      DialogData: [{\n        id: 1,\n        name: 'Sasha'\n      }, {\n        id: 2,\n        name: 'Luda'\n      }, {\n        id: 3,\n        name: 'Masha'\n      }],\n      MessageData: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'Yo'\n      }, {\n        id: 2,\n        message: 'YO YOYo'\n      }],\n      NewMessage: \"\"\n    }\n  },\n\n  onClickAddPost(postMessage) {\n    const newPost = {\n      id: 5,\n      message: postMessage,\n      likesCount: 0\n    };\n\n    this._state.profilePage.PostsData.push(newPost);\n\n    this.renderTree();\n  },\n\n  updateNewPostText(newText) {\n    this._state.profilePage.messageNewPostText = newText;\n    this.renderTree();\n  },\n\n  subscribe(observer) {\n    this.renderTree = observer;\n  },\n\n  renderTree() {\n    console.log(\"render\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  dispatch(action) {\n    if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.messageNewPostText = action.newText;\n      this.renderTree();\n    } else if (action.type === 'ADD-POST') {\n      const newPost = {\n        id: 5,\n        message: action.postMessage,\n        likesCount: 0\n      };\n\n      this._state.profilePage.PostsData.push(newPost);\n\n      this.renderTree();\n    } else if (action.type === 'ADD-MESSAGE') {\n      const newMassageBody = {\n        id: 6,\n        message: action.messageBody\n      };\n\n      this._state.dialogsPage.MessageData.push(newMassageBody);\n\n      this.renderTree;\n    } else if (action.type === 'UPDATE-NEW-MESSAGE-TEXT') {\n      this._state.dialogsPage.NewMessage = action.newMassage;\n      this.renderTree();\n    }\n  }\n\n};\nexport const AddMessageAC = messageBody => {\n  return {\n    type: ADD_MESSAGE,\n    messageBody: messageBody\n  };\n};\n_c = AddMessageAC;\nexport const UpdateNewMessageTextAC = newMassage => {\n  return {\n    type: UPDATE_NEW_MESSAGE_TEXT,\n    newMassage: newMassage\n  };\n};\n_c2 = UpdateNewMessageTextAC;\nexport const AddPostAC = postMessage => {\n  return {\n    type: ADD_POST,\n    postMessage: postMessage\n  };\n};\n_c3 = AddPostAC;\nexport const UpdateNewPostTextAC = newText => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: newText\n  };\n};\n_c4 = UpdateNewPostTextAC;\nexport default store;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AddMessageAC\");\n$RefreshReg$(_c2, \"UpdateNewMessageTextAC\");\n$RefreshReg$(_c3, \"AddPostAC\");\n$RefreshReg$(_c4, \"UpdateNewPostTextAC\");","map":{"version":3,"sources":["E:/mySocial/social network/-social-network/social network/src/Redax/state.tsx"],"names":["UPDATE_NEW_POST_TEXT","ADD_POST","UPDATE_NEW_MESSAGE_TEXT","ADD_MESSAGE","store","_state","profilePage","PostsData","id","message","likesCount","messageNewPostText","dialogsPage","DialogData","name","MessageData","NewMessage","onClickAddPost","postMessage","newPost","push","renderTree","updateNewPostText","newText","subscribe","observer","console","log","getState","dispatch","action","type","newMassageBody","messageBody","newMassage","AddMessageAC","UpdateNewMessageTextAC","AddPostAC","UpdateNewPostTextAC"],"mappings":"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","sourcesContent":["const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst ADD_POST = 'ADD-POST'\r\n\r\nconst UPDATE_NEW_MESSAGE_TEXT='UPDATE-NEW-MESSAGE-TEXT'\r\nconst ADD_MESSAGE='ADD-MESSAGE'\r\n\r\ntype PostsDataType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\ntype DialogDataType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\ntype profilePageType = {\r\n    PostsData: PostsDataType[]\r\n    messageNewPostText: string\r\n}\r\ntype dialogsPageType = {\r\n    MessageData: MessageType[]\r\n    DialogData: DialogDataType[]\r\n    NewMessage: string\r\n}\r\nexport type RootStateType = {\r\n    profilePage: profilePageType\r\n    dialogsPage: dialogsPageType\r\n}\r\n\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    onClickAddPost: (postMessage: string) => void\r\n    updateNewPostText: (newText: string) => void\r\n    subscribe: (observer: () => void) => void\r\n    renderTree: () => void\r\n    getState: () => RootStateType\r\n    dispatch: (action: Types) => void\r\n}\r\n\r\nexport type Types = ReturnType<typeof AddPostAC> | ReturnType<typeof UpdateNewPostTextAC>|\r\n    ReturnType<typeof AddMessageAC>|ReturnType<typeof UpdateNewMessageTextAC>\r\n\r\n\r\nconst store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            PostsData: [\r\n                {id: 1, message: 'Hi,how a you?', likesCount: 2},\r\n                {id: 2, message: 'Yo', likesCount: 3},\r\n                {id: 3, message: 'YOyoYo', likesCount: 5}\r\n            ],\r\n            messageNewPostText: \"\"\r\n        },\r\n        dialogsPage: {\r\n            DialogData: [\r\n                {id: 1, name: 'Sasha'},\r\n                {id: 2, name: 'Luda'},\r\n\r\n                {id: 3, name: 'Masha'}\r\n            ],\r\n            MessageData: [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'Yo'},\r\n                {id: 2, message: 'YO YOYo'}\r\n            ],\r\n            NewMessage: \"\"\r\n        }\r\n    },\r\n    onClickAddPost(postMessage: string) {\r\n        const newPost: PostsDataType = {\r\n            id: 5,\r\n            message: postMessage,\r\n            likesCount: 0\r\n        }\r\n        this._state.profilePage.PostsData.push(newPost)\r\n        this.renderTree()\r\n    },\r\n    updateNewPostText(newText: string) {\r\n        this._state.profilePage.messageNewPostText = newText\r\n        this.renderTree()\r\n    },\r\n    subscribe(observer) {\r\n        this.renderTree = observer\r\n    },\r\n    renderTree() {\r\n        console.log(\"render\")\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === 'UPDATE-NEW-POST-TEXT') {\r\n            this._state.profilePage.messageNewPostText = action.newText\r\n            this.renderTree()\r\n        } else if (action.type === 'ADD-POST') {\r\n            const newPost: PostsDataType = {\r\n                id: 5,\r\n                message: action.postMessage,\r\n                likesCount: 0\r\n            }\r\n            this._state.profilePage.PostsData.push(newPost)\r\n            this.renderTree()\r\n        } else if (action.type === 'ADD-MESSAGE') {\r\n            const newMassageBody: MessageType = {\r\n                id: 6,\r\n                message: action.messageBody\r\n            }\r\n            this._state.dialogsPage.MessageData.push(newMassageBody)\r\n            this.renderTree\r\n        }else if(action.type==='UPDATE-NEW-MESSAGE-TEXT'){\r\n                this._state.dialogsPage.NewMessage=action.newMassage\r\n            this.renderTree()\r\n        }\r\n    },\r\n\r\n}\r\nexport const AddMessageAC=(messageBody:string)=>{\r\n    return{\r\n        type:ADD_MESSAGE,\r\n        messageBody:messageBody\r\n    }as const\r\n}\r\nexport const UpdateNewMessageTextAC=(newMassage:string)=>{\r\n    return{\r\n        type:UPDATE_NEW_MESSAGE_TEXT,\r\n        newMassage:newMassage\r\n    }as const\r\n}\r\nexport const AddPostAC = (postMessage: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        postMessage: postMessage\r\n    } as const\r\n}\r\nexport const UpdateNewPostTextAC = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: newText\r\n    } as const\r\n}\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}