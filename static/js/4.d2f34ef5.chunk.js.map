{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Messages/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/Forms/AddPostOrMessageForm.tsx","components/Forms/AddPostForm.module.css","components/Dialogs/Dialogs.module.css"],"names":["DialogItem","props","className","s","dialog","active","to","id","name","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","d","messagesElements","messagesData","dialogs","dialogsItems","messages","addPost","classNameTextArea","textArea","callBack","sendNewDialogMessage","compose","AuthRedirect","connect","dispatch","text","addNewMessage","AddPostForm","classNameButton","useForm","mode","register","handleSubmit","setValue","errors","formState","container","onSubmit","data","required","minLength","maxLength","value","placeholder","module","exports"],"mappings":"yLAeeA,MAXf,SAAoBC,GAChB,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,eAAC,IAAD,CAASC,GAAI,YAAaL,EAAMM,GAAhC,cAAsCN,EAAMO,KAA5C,UCYOC,MAff,SAAiBR,GACb,OAAO,8BACH,8BACKA,EAAMS,a,QCmCJC,MAhCf,SAAiBV,GAEb,IAAIW,EAAQX,EAAMY,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAuBV,GAAIU,EAAEV,GAAIC,KAAMS,EAAET,MAAxBS,EAAEV,OAClEW,EAAmBN,EAAMO,aAAaH,KAAI,SAACN,GAAD,OAAa,cAAC,EAAD,CAA0BA,QAASA,EAAQA,SAA7BA,EAAQH,OAMjF,OAAQ,sBAAKL,UAAS,UAAKC,IAAEiB,QAAP,cAAd,UACA,8BACI,qBAAKlB,UAAWC,IAAEkB,aAAlB,SACKP,MAGT,qBAAKZ,UAAWC,IAAEmB,SAAlB,SAEI,8BAAMJ,MAGV,qBAAKhB,UAAWC,IAAEoB,QAAlB,SACI,cAAC,IAAD,CAAaC,kBAAmBrB,IAAEsB,SAAUC,SAAUzB,EAAM0B,6BCE7DC,sBAA6BC,IACxCC,aAfoB,SAAClB,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAGA,SAACkB,GACxB,MAAO,CACHJ,qBAAsB,SAACK,GACnBD,EAASE,YAAcD,SAMpBJ,CAEbjB,I,4HCnBWuB,EAAc,SAAC,GAA4D,IAAD,EAA1DR,EAA0D,EAA1DA,SAASF,EAAiD,EAAjDA,kBAAkBW,EAA+B,EAA/BA,gBAA+B,EAEfC,YAAkB,CAAEC,KAAM,aAAtFC,EAF2E,EAE3EA,SAAUC,EAFiE,EAEjEA,aAAcC,EAFmD,EAEnDA,SAAuBC,EAF4B,EAEzCC,UAAaD,OAQvD,OACI,uBAAMvC,UAAWC,IAAEwC,UAAWC,SAAUL,GARF,SAACM,GACvCnB,EAASmB,EAAKnC,SACd8B,EAAS,UAAW,OAMpB,UAEI,kDAAWtC,UAAWsB,GAAuBc,EAAS,UAAW,CAC7DQ,UAAU,EAAMC,UAAW,EAAGC,UAAW,CAAEC,MAAO,IAAKvC,QAAS,qBADpE,IAGIwC,YAAa,0HACjB,yCACKT,EAAO/B,eADZ,aACK,EAAgBA,UAGrB,8BACI,cAAC,IAAD,CAAaR,UAAWiC,EAAxB,yB,mBCtChBgB,EAAOC,QAAU,CAAC,UAAY,iC,mBCA9BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU","file":"static/js/4.d2f34ef5.chunk.js","sourcesContent":["import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction DialogItem(props: DialogItemPropsType) {\r\n    return <div className={s.dialog + \" \" + s.active}>\r\n        <NavLink to={\"/dialogs/\"+ props.id}> {props.name} </NavLink>\r\n    </div>\r\n}\r\n\r\n type DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\n\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return <div>\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport type MessagePropsType = {\r\n    message: string\r\n\r\n}\r\n\r\n\r\nexport default Message","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport Message from \"./Messages/Message\";\r\nimport {AddMessageFormRedux, AddMessagePropsType} from \"../Forms/AddMessageForm\";\r\nimport {AddPostForm} from \"../Forms/AddPostOrMessageForm\";\r\n\r\n\r\nfunction Dialogs(props: DialogsPropsType) {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogsData.map((d) => <DialogItem key={d.id} id={d.id} name={d.name}/>)\r\n    let messagesElements = state.messagesData.map((message) => <Message key={message.id} message={message.message}/>)\r\n\r\n    const addNewMessage = (value: AddMessagePropsType) => {\r\n        props.sendNewDialogMessage(value.newMessageBody)\r\n    }\r\n\r\n    return (<div className={`${s.dialogs} container`}>\r\n            <div>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                <div>{messagesElements}</div>\r\n\r\n            </div>\r\n            <div className={s.addPost}>\r\n                <AddPostForm classNameTextArea={s.textArea} callBack={props.sendNewDialogMessage}/>\r\n                {/*<AddMessageFormRedux onSubmit={addNewMessage}/>*/}{/*вариант на классах*/}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {addNewMessage, DialogsPageType} from \"../../redux/dialogsReducer\";\r\nimport {AppStoreType} from \"../../redux/reduxStore\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\ntype mapDialogsStateType = {\r\n    dialogsPage: DialogsPageType\r\n\r\n}\r\n\r\ntype mapDialogsDispatchType = {\r\n    sendNewDialogMessage: (text: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = mapDialogsStateType & mapDialogsDispatchType\r\n\r\nconst mapStateToProps = (state: AppStoreType): mapDialogsStateType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDialogsDispatchType => {\r\n    return {\r\n        sendNewDialogMessage: (text: string) => {\r\n            dispatch(addNewMessage(text))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(AuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)\r\n\r\n","import React from 'react'\r\nimport { SubmitHandler, useForm } from 'react-hook-form'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport s from './AddPostForm.module.css'\r\n\r\ntype FormType = {\r\n    message: string\r\n}\r\n\r\ntype PropsType = {\r\n    callBack: (text: string) => void\r\n    classNameTextArea?: string\r\n    classNameButton?: string\r\n}\r\n\r\n\r\n\r\nexport const AddPostForm = ({callBack,classNameTextArea,classNameButton}:PropsType) => {\r\n\r\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm<FormType>({ mode: 'onChange', })\r\n    const onSubmit: SubmitHandler<FormType> = (data) => {\r\n        callBack(data.message)\r\n        setValue(\"message\", \"\")\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form className={s.container} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <textarea  className={classNameTextArea} {...register('message', {\r\n                required: true, minLength: 1, maxLength: { value: 300, message: 'max length 300' }\r\n            })}\r\n                placeholder={\"Напиши своё сообщение\"} />\r\n            <span>\r\n                {errors.message?.message}\r\n            </span>\r\n\r\n            <div>\r\n                <SuperButton className={classNameButton} >Send</SuperButton>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddPostForm_container__1XvIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__g_Wad\",\"messages\":\"Dialogs_messages__3RyRl\",\"dialogsItems\":\"Dialogs_dialogsItems__2tW2H\",\"active\":\"Dialogs_active__xmQzR\",\"textArea\":\"Dialogs_textArea__14tf8\",\"addPost\":\"Dialogs_addPost__1qNnm\"};"],"sourceRoot":""}